name: monokle-ui-tests

on:
  push:
    branches:
      - olelensmar/test/playwright-baseline

  workflow_dispatch:

jobs:
  ui-tests-mac:
    runs-on: macOS-latest

    steps:
      # Make sure build is clean and no files from a previous run are re-used.
      - name: Cleanup files before run
        run: |
          rm -rf *
          rm /Users/runner/.npm/_logs/*.log || true
        if: ${{ always() }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Project
        uses: actions/checkout@v2

      # Check memory and cpu
      - name: Verify Runner Resources
        run: |
          sysctl -n machdep.cpu.brand_string
          vm_stat | perl -ne '/page size of (\d+)/ and $size=$1; /Pages\s+([^:]+)[^\d]+(\d+)/ and printf("%-16s % 16.2f Mi\n", "$1:", $2 * $size / 1048576);'

      - name: Install Tools
        run: |
          brew install jq

      - name: Get Node Version
        run: |
          cat .nvmrc
          echo "::set-output name=nodeversion::$(cat .nvmrc)"
        id: get-node-version

      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeversion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeversion }}
          cache: 'npm'

      - name: Install Dependencies
        run: |
          env
          echo "npm: $(npm --version)"
          echo "node: $(node --version)"
          npm install

      - name: Verify Dependencies
        run: |
          ls -la
          npm list --depth=1

      - name: Build
        run: |
          npm run electron:build:ci
        env:
          # Set CI flag to false, or the build fails on all warnings, not just errors as locally.
          CI: false

      - name: Package for test execution
        run: |
          npm exec -c "electron-builder --publish \"never\""

      # Check Binary Sizes
      - name: Build Succeeded
        run: |
          ls -alh dist | grep Monokle && du -sh dist/mac || true
        if: ${{ success() }}

      - name: E2E Test for Electron ðŸ§ª
        run: npm run ui-test

      - name: Upload Test Results ðŸ—ƒ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-output
          path: test-output/**

  ui-tests-windows:
    runs-on: windows-latest

    steps:
      # Make sure build is clean and no files from a previous run are re-used.
      - name: Cleanup files before run
        run: |
          cmd /r dir
        if: ${{ always() }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Get Node Version
        run: |
          Set-PSDebug -Trace 1
          $filePath = "D:\a\monokle\monokle\.nvmrc"
          Get-Content $filePath -Raw
          $content = Get-Content $filePath -Raw
          echo "::set-output name=nodeversion::$content"
        id: get-node-version

      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeversion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeversion }}
          cache: 'npm'

      - name: Get MSFT Cert
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'kubeshop_msft.p12'
          encodedString: ${{ secrets.CERT_MSFT_KUBESHOP_P12_B64 }}

      # Install Dependencies
      - name: Install Dependencies
        run: |
          Set-PSDebug -Trace 1
          node --version
          npm --version
          npm install

      - name: Verify Dependencies
        run: |
          cmd /r dir
          npm list --depth=1

      - name: Build
        run: |
          npm run electron:build:ci
        env:
          # Set CI flag to false, or the build fails on all warnings, not just errors as locally.
          CI: false

      - name: Package
        run: |
          npm exec -c 'electron-builder --publish "never"'
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          WIN_CSC_LINK: ${{ steps.write_file.outputs.filePath }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.CERT_MSFT_KUBESHOP_P12_PASSWORD }}
          EP_PRE_RELEASE: true
          USE_HARD_LINKS: false

      # Check Binary Sizes
      - name: Build Succeeded
        run: |
          cmd /r dir .\dist
        if: ${{ success() }}
      - name: E2E Test for Electron ðŸ§ª
        run: npm run ui-test

      - name: Upload Test Results ðŸ—ƒ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-output
          path: test-output/**

  # This workflow contains a single job called "build"
  ui-tests-linux:
    runs-on: ubuntu-latest

    steps:
      # Make sure build is clean and no files from a previous run are re-used.
      - name: Cleanup files before run
        run: |
          rm -rf *
          rm /Users/runner/.npm/_logs/*.log || true
        if: ${{ always() }}

      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Get Node Version
        run: |
          cat .nvmrc
          echo "::set-output name=nodeversion::$(cat .nvmrc)"
        id: get-node-version

      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeversion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeversion }}
          cache: 'npm'

      - name: Install Dependencies
        run: |
          env
          echo "npm: $(npm --version)"
          echo "node: $(node --version)"
          npm install

      - name: Verify Dependencies
        run: |
          ls -la
          npm list --depth=1

      - name: Install Tools
        run: |
          sudo apt-get install jq

      - name: Build
        run: |
          npm run electron:build:ci
        env:
          # Set CI flag to false, or the build fails on all warnings, not just errors as locally.
          CI: false

      - name: Package
        run: |
          npm exec -c "electron-builder --publish \"never\""
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          EP_PRE_RELEASE: true
          USE_HARD_LINKS: false

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'dist/latest-linux.yml,dist/latest-linux-arm64.yml,dist/*.deb,dist/*.AppImage'
          draft: false
          prerelease: true
          omitBody: true
          tag: ${{ steps.apply-tag.outputs.TAG }}
          token: ${{ secrets.github_token }}

      # Check Binary Size
      - name: Build Succeeded
        run: |
          ls -alh dist | grep Monokle && du -sh dist || true
        if: ${{ success() }}

      - name: E2E Test for Electron ðŸ§ª
        run: npm run ui-test

      - name: Upload Test Results ðŸ—ƒ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-output
          path: test-output/**


      # Make sure no secrets or certs are left on the runner
      - name: Cleanup files after run
        run: |
          rm -rf *
          ls -la
        if: ${{ always() }}

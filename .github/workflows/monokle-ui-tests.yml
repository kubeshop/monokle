name: monokle-ui-tests

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  ui-tests-mac:
    runs-on: macOS-latest

    steps:
      # Make sure build is clean and no files from a previous run are re-used.
      - name: Cleanup files before run
        run: |
          rm -rf *
          rm /Users/runner/.npm/_logs/*.log || true
        if: ${{ always() }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Project
        uses: actions/checkout@v2

      # Check memory and cpu
      - name: Verify Runner Resources
        run: |
          sysctl -n machdep.cpu.brand_string
          vm_stat | perl -ne '/page size of (\d+)/ and $size=$1; /Pages\s+([^:]+)[^\d]+(\d+)/ and printf("%-16s % 16.2f Mi\n", "$1:", $2 * $size / 1048576);'

      - name: Install Tools
        run: |
          brew install jq

      - name: Get Node Version
        run: |
          cat .nvmrc
          echo "::set-output name=nodeversion::$(cat .nvmrc)"
        id: get-node-version

      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeversion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeversion }}
          cache: 'npm'

      - name: Install Dependencies
        run: |
          env
          echo "npm: $(npm --version)"
          echo "node: $(node --version)"
          npm install

      # - name: Verify Dependencies
      #   run: |
      #     ls -la
      #     npm list --depth=1

      - name: Build
        run: |
          npm run electron:build:ci
        env:
          # Set CI flag to false, or the build fails on all warnings, not just errors as locally.
          CI: false

      - name: Package for test execution
        run: |
          npm exec -c "electron-builder --publish \"never\""

      # Check Binary Sizes
      - name: Build Succeeded
        run: |
          ls -alh dist | grep Monokle && du -sh dist/mac || true
        if: ${{ success() }}

      - name: E2E Test for Electron ðŸ§ª
        run: npm run ui-test

      - name: Upload Test Results ðŸ—ƒ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-output
          path: test-output/**

      - name: Notify slack failure
        env:
          TEST_UI_AUTOMATION_WEBHOOK: ${{ secrets.TEST_UI_AUTOMATION_WEBHOOK }}
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Hi <!subteam^S02SXLUMUH0>, it seems that our ui tests failed on: https://github.com/kubeshop/monokle/actions/workflows/monokle-ui-tests.yml"}' $TEST_UI_AUTOMATION_WEBHOOK

  ui-tests-windows:
    runs-on: windows-latest

    steps:
      # Make sure build is clean and no files from a previous run are re-used.
      - name: Cleanup files before run
        run: |
          cmd /r dir
        if: ${{ always() }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Install Tools
        run: |
          choco install jq dotnet-5.0-runtime dotnetcore-sdk -y
          dotnet tool install --version 3.0.0 --global AzureSignTool

      - name: Get Node Version
        run: |
          Set-PSDebug -Trace 1
          $filePath = "D:\a\monokle\monokle\.nvmrc"
          Get-Content $filePath -Raw
          $content = Get-Content $filePath -Raw
          echo "::set-output name=nodeversion::$content"
        id: get-node-version

      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeversion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeversion }}
          cache: 'npm'

      # Install Dependencies
      - name: Install Dependencies
        run: |
          Set-PSDebug -Trace 1
          node --version
          npm --version
          npm install

      # - name: Verify Dependencies
      #   run: |
      #     cmd /r dir
      #     npm list --depth=1

      - name: Build
        run: |
          npm run electron:build:ci
        env:
          # Set CI flag to false, or the build fails on all warnings, not just errors as locally.
          CI: false

      - name: Package
        run: |
          npm exec -c 'electron-builder --publish "never"'
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          EP_PRE_RELEASE: true
          USE_HARD_LINKS: false

      # Check Binary Sizes
      - name: Build Succeeded
        run: |
          cmd /r dir .\dist
        if: ${{ success() }}
      - name: E2E Test for Electron ðŸ§ª
        run: npm run ui-test

      - name: Upload Test Results ðŸ—ƒ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-output
          path: test-output/**

      - name: Notify slack failure
        env:
          TEST_UI_AUTOMATION_WEBHOOK: ${{ secrets.TEST_UI_AUTOMATION_WEBHOOK }}
        if: failure()
        run: |
          curl -X POST -H "Content-type: application/json" --data "{'text':'Hi <!subteam^S02SXLUMUH0>, it seems that our ui tests failed on: https://github.com/kubeshop/monokle/actions/workflows/monokle-ui-tests.yml'}" $TEST_UI_AUTOMATION_WEBHOOK
